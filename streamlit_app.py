import streamlit as st
import pandas as pd
import sqlite3

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ===
st.set_page_config(page_title="AI-Ticket Manager", layout="wide")

st.title("üì¨ AI –°–∏—Å—Ç–µ–º–∞ –¢–∏–∫–µ—Ç–æ–≤ f√ºr IT Support")
st.markdown("–ü—Ä–æ—Å–º–æ—Ç—Ä –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞–º–∏ –∏–∑ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã.")

# === –ó–∞–≥—Ä—É–∑–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö ===
DB_PATH = "tickets.db"

@st.cache_data
def load_data():
    conn = sqlite3.connect(DB_PATH)
    df = pd.read_sql_query("SELECT * FROM requests ORDER BY datetime DESC", conn)
    conn.close()
    return df

df = load_data()

# === –§–∏–ª—å—Ç—Ä—ã ===
with st.sidebar:
    st.header("üîé –§–∏–ª—å—Ç—Ä—ã")
    status_filter = st.multiselect("–°—Ç–∞—Ç—É—Å", options=df["status"].unique(), default=list(df["status"].unique()))
    category_filter = st.multiselect("–ö–∞—Ç–µ–≥–æ—Ä–∏—è", options=df["category"].unique(), default=list(df["category"].unique()))
    priority_filter = st.multiselect("–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç", options=df["priority"].unique(), default=list(df["priority"].unique()))
    client_filter = st.multiselect("–ö–ª–∏–µ–Ω—Ç", options=df["client"].unique(), default=list(df["client"].unique()))

# === –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ ===
filtered_df = df[
    (df["status"].isin(status_filter)) &
    (df["category"].isin(category_filter)) &
    (df["priority"].isin(priority_filter)) &
    (df["client"].isin(client_filter))
]

st.success(f"–ù–∞–π–¥–µ–Ω–æ {len(filtered_df)} —Ç–∏–∫–µ—Ç–æ–≤")

# === –¢–∞–±–ª–∏—Ü–∞ ===
st.dataframe(filtered_df, use_container_width=True)

# === –≠–∫—Å–ø–æ—Ä—Ç ===
st.download_button("üíæ –°–∫–∞—á–∞—Ç—å –∫–∞–∫ CSV", filtered_df.to_csv(index=False), file_name="filtered_tickets.csv", mime="text/csv")